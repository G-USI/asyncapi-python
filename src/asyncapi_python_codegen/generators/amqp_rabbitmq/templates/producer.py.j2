from .messages import *
from .base import BaseProducer


class Producer(BaseProducer):
    {%- for channel in exchange_channels %}
    async def {{ channel.field_name }}(self, message: {{channel.schema}}) -> None:
        return await self._exchange_send("{{ channel.channel_name }}", message)
    {% endfor %}
    {%- for channel in queue_channels %}
    async def {{ channel.field_name }}(self, message: {{channel.schema}}) -> None:
        return await self._queue_send("{{ channel.channel_name }}", message)
    {% endfor %}

    @classmethod
    def _exchanges(cls):
        return {
            {%- for channel in exchange_channels%}
            "{{channel.channel_name}}": {},
            {%- endfor %}
        }

    @classmethod
    def _queues(cls):
        return {
            {%- for channel in queue_channels%}
            "{{channel.channel_name}}": {},
            {%- endfor %}
        }